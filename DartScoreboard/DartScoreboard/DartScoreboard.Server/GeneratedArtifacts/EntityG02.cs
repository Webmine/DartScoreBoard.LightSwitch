

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
    public sealed partial class HitSetItem : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.HitSetItem, global::LightSwitchApplication.HitSetItem.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the HitSetItem entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public HitSetItem()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public HitSetItem(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.HitSetItem> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.HitSetItem.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void HitSetItem_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void HitSetItem_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Id
        {
            get
            {
                return global::LightSwitchApplication.HitSetItem.DetailsClass.GetValue(this, global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties.Id);
            }
            set
            {
                global::LightSwitchApplication.HitSetItem.DetailsClass.SetValue(this, global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties.Id, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Value
        {
            get
            {
                return global::LightSwitchApplication.HitSetItem.DetailsClass.GetValue(this, global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties.Value);
            }
            set
            {
                global::LightSwitchApplication.HitSetItem.DetailsClass.SetValue(this, global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties.Value, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Value_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Value_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Value_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Multiplicity
        {
            get
            {
                return global::LightSwitchApplication.HitSetItem.DetailsClass.GetValue(this, global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties.Multiplicity);
            }
            set
            {
                global::LightSwitchApplication.HitSetItem.DetailsClass.SetValue(this, global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties.Multiplicity, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Multiplicity_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Multiplicity_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Multiplicity_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Turn
        {
            get
            {
                return global::LightSwitchApplication.HitSetItem.DetailsClass.GetValue(this, global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties.Turn);
            }
            set
            {
                global::LightSwitchApplication.HitSetItem.DetailsClass.SetValue(this, global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties.Turn, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Turn_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Turn_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Turn_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int DartNumber
        {
            get
            {
                return global::LightSwitchApplication.HitSetItem.DetailsClass.GetValue(this, global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties.DartNumber);
            }
            set
            {
                global::LightSwitchApplication.HitSetItem.DetailsClass.SetValue(this, global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties.DartNumber, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DartNumber_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DartNumber_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DartNumber_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool Succesful
        {
            get
            {
                return global::LightSwitchApplication.HitSetItem.DetailsClass.GetValue(this, global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties.Succesful);
            }
            set
            {
                global::LightSwitchApplication.HitSetItem.DetailsClass.SetValue(this, global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties.Succesful, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Succesful_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Succesful_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Succesful_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime ThrowDate
        {
            get
            {
                return global::LightSwitchApplication.HitSetItem.DetailsClass.GetValue(this, global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties.ThrowDate);
            }
            set
            {
                global::LightSwitchApplication.HitSetItem.DetailsClass.SetValue(this, global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties.ThrowDate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ThrowDate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ThrowDate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ThrowDate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string CreatedBy
        {
            get
            {
                return global::LightSwitchApplication.HitSetItem.DetailsClass.GetValue(this, global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties.CreatedBy);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedBy_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedBy_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedBy_Changed();
        public global::Microsoft.LightSwitch.Framework.Server.PersonInfo CreatedByInfo
        {
            get
            {
                global::Microsoft.LightSwitch.Server.IPersonInfoFactory personInfoFactory = global::LightSwitchApplication.Application.Current.GetPersonInfoFactory();
                return (global::Microsoft.LightSwitch.Framework.Server.PersonInfo) personInfoFactory.ResolvePerson(this.CreatedBy);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTimeOffset> Created
        {
            get
            {
                return global::LightSwitchApplication.HitSetItem.DetailsClass.GetValue(this, global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties.Created);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Created_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Created_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Created_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ModifiedBy
        {
            get
            {
                return global::LightSwitchApplication.HitSetItem.DetailsClass.GetValue(this, global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties.ModifiedBy);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedBy_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedBy_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedBy_Changed();
        public global::Microsoft.LightSwitch.Framework.Server.PersonInfo ModifiedByInfo
        {
            get
            {
                global::Microsoft.LightSwitch.Server.IPersonInfoFactory personInfoFactory = global::LightSwitchApplication.Application.Current.GetPersonInfoFactory();
                return (global::Microsoft.LightSwitch.Framework.Server.PersonInfo) personInfoFactory.ResolvePerson(this.ModifiedBy);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTimeOffset> Modified
        {
            get
            {
                return global::LightSwitchApplication.HitSetItem.DetailsClass.GetValue(this, global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties.Modified);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Modified_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Modified_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Modified_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public byte[] RowVersion
        {
            get
            {
                return global::LightSwitchApplication.HitSetItem.DetailsClass.GetValue(this, global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties.RowVersion);
            }
            set
            {
                global::LightSwitchApplication.HitSetItem.DetailsClass.SetValue(this, global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties.RowVersion, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.GameSetItem Game
        {
            get
            {
                return global::LightSwitchApplication.HitSetItem.DetailsClass.GetValue(this, global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties.Game);
            }
            set
            {
                global::LightSwitchApplication.HitSetItem.DetailsClass.SetValue(this, global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties.Game, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Game_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Game_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Game_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.UserSetItem Player
        {
            get
            {
                return global::LightSwitchApplication.HitSetItem.DetailsClass.GetValue(this, global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties.Player);
            }
            set
            {
                global::LightSwitchApplication.HitSetItem.DetailsClass.SetValue(this, global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties.Player, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Player_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Player_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Player_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.HitSetItem,
                global::LightSwitchApplication.HitSetItem.DetailsClass,
                global::LightSwitchApplication.HitSetItem.DetailsClass.IImplementation,
                global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.HitSetItem, global::LightSwitchApplication.HitSetItem.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.HitSetItem, global::LightSwitchApplication.HitSetItem.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties.Id;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.HitSetItem, global::LightSwitchApplication.HitSetItem.DetailsClass>.Entry
                __HitSetItemEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.HitSetItem, global::LightSwitchApplication.HitSetItem.DetailsClass>.Entry(
                    global::LightSwitchApplication.HitSetItem.DetailsClass.__HitSetItem_CreateNew,
                    global::LightSwitchApplication.HitSetItem.DetailsClass.__HitSetItem_Created,
                    global::LightSwitchApplication.HitSetItem.DetailsClass.__HitSetItem_AllowSaveWithErrors);
            private static global::LightSwitchApplication.HitSetItem __HitSetItem_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.HitSetItem> es)
            {
                return new global::LightSwitchApplication.HitSetItem(es);
            }
            private static void __HitSetItem_Created(global::LightSwitchApplication.HitSetItem e)
            {
                e.HitSetItem_Created();
            }
            private static bool __HitSetItem_AllowSaveWithErrors(global::LightSwitchApplication.HitSetItem e)
            {
                bool result = false;
                e.HitSetItem_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.HitSetItem, global::LightSwitchApplication.HitSetItem.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.HitSetItem, global::LightSwitchApplication.HitSetItem.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.HitSetItem, global::LightSwitchApplication.HitSetItem.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.HitSetItem, global::LightSwitchApplication.HitSetItem.DetailsClass, int> Id
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties.Id) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.HitSetItem, global::LightSwitchApplication.HitSetItem.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.HitSetItem, global::LightSwitchApplication.HitSetItem.DetailsClass, int> Value
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties.Value) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.HitSetItem, global::LightSwitchApplication.HitSetItem.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.HitSetItem, global::LightSwitchApplication.HitSetItem.DetailsClass, int> Multiplicity
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties.Multiplicity) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.HitSetItem, global::LightSwitchApplication.HitSetItem.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.HitSetItem, global::LightSwitchApplication.HitSetItem.DetailsClass, int> Turn
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties.Turn) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.HitSetItem, global::LightSwitchApplication.HitSetItem.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.HitSetItem, global::LightSwitchApplication.HitSetItem.DetailsClass, int> DartNumber
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties.DartNumber) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.HitSetItem, global::LightSwitchApplication.HitSetItem.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.HitSetItem, global::LightSwitchApplication.HitSetItem.DetailsClass, bool> Succesful
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties.Succesful) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.HitSetItem, global::LightSwitchApplication.HitSetItem.DetailsClass, bool>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.HitSetItem, global::LightSwitchApplication.HitSetItem.DetailsClass, global::System.DateTime> ThrowDate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties.ThrowDate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.HitSetItem, global::LightSwitchApplication.HitSetItem.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.HitSetItem, global::LightSwitchApplication.HitSetItem.DetailsClass, string> CreatedBy
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties.CreatedBy) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.HitSetItem, global::LightSwitchApplication.HitSetItem.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.HitSetItem, global::LightSwitchApplication.HitSetItem.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>> Created
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties.Created) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.HitSetItem, global::LightSwitchApplication.HitSetItem.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.HitSetItem, global::LightSwitchApplication.HitSetItem.DetailsClass, string> ModifiedBy
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties.ModifiedBy) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.HitSetItem, global::LightSwitchApplication.HitSetItem.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.HitSetItem, global::LightSwitchApplication.HitSetItem.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>> Modified
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties.Modified) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.HitSetItem, global::LightSwitchApplication.HitSetItem.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.HitSetItem, global::LightSwitchApplication.HitSetItem.DetailsClass, byte[]> RowVersion
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties.RowVersion) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.HitSetItem, global::LightSwitchApplication.HitSetItem.DetailsClass, byte[]>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.HitSetItem, global::LightSwitchApplication.HitSetItem.DetailsClass, global::LightSwitchApplication.GameSetItem> Game
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties.Game) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.HitSetItem, global::LightSwitchApplication.HitSetItem.DetailsClass, global::LightSwitchApplication.GameSetItem>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.HitSetItem, global::LightSwitchApplication.HitSetItem.DetailsClass, global::LightSwitchApplication.UserSetItem> Player
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties.Player) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.HitSetItem, global::LightSwitchApplication.HitSetItem.DetailsClass, global::LightSwitchApplication.UserSetItem>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int Id { get; set; }
                new int Value { get; set; }
                new int Multiplicity { get; set; }
                new int Turn { get; set; }
                new int DartNumber { get; set; }
                new bool Succesful { get; set; }
                new global::System.DateTime ThrowDate { get; set; }
                new string CreatedBy { get; }
                new global::System.Nullable<global::System.DateTimeOffset> Created { get; }
                new string ModifiedBy { get; }
                new global::System.Nullable<global::System.DateTimeOffset> Modified { get; }
                new byte[] RowVersion { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Game { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Player { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.HitSetItem, global::LightSwitchApplication.HitSetItem.DetailsClass, int>.Entry
                    Id = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.HitSetItem, global::LightSwitchApplication.HitSetItem.DetailsClass, int>.Entry(
                        "Id",
                        global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties._Id_Stub,
                        global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties._Id_ComputeIsReadOnly,
                        global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties._Id_Validate,
                        global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties._Id_GetImplementationValue,
                        global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties._Id_SetImplementationValue,
                        global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties._Id_OnValueChanged);
                private static void _Id_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.HitSetItem.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.HitSetItem, global::LightSwitchApplication.HitSetItem.DetailsClass, int>.Data> c, global::LightSwitchApplication.HitSetItem.DetailsClass d, object sf)
                {
                    c(d, ref d._Id, sf);
                }
                private static bool _Id_ComputeIsReadOnly(global::LightSwitchApplication.HitSetItem e)
                {
                    bool result = false;
                    e.Id_IsReadOnly(ref result);
                    return result;
                }
                private static void _Id_Validate(global::LightSwitchApplication.HitSetItem e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Id_Validate(r);
                }
                private static int _Id_GetImplementationValue(global::LightSwitchApplication.HitSetItem.DetailsClass d)
                {
                    return d.ImplementationEntity.Id;
                }
                private static void _Id_SetImplementationValue(global::LightSwitchApplication.HitSetItem.DetailsClass d, int v)
                {
                    d.ImplementationEntity.Id = v;
                }
                private static void _Id_OnValueChanged(global::LightSwitchApplication.HitSetItem e)
                {
                    e.Id_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.HitSetItem, global::LightSwitchApplication.HitSetItem.DetailsClass, int>.Entry
                    Value = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.HitSetItem, global::LightSwitchApplication.HitSetItem.DetailsClass, int>.Entry(
                        "Value",
                        global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties._Value_Stub,
                        global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties._Value_ComputeIsReadOnly,
                        global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties._Value_Validate,
                        global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties._Value_GetImplementationValue,
                        global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties._Value_SetImplementationValue,
                        global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties._Value_OnValueChanged);
                private static void _Value_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.HitSetItem.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.HitSetItem, global::LightSwitchApplication.HitSetItem.DetailsClass, int>.Data> c, global::LightSwitchApplication.HitSetItem.DetailsClass d, object sf)
                {
                    c(d, ref d._Value, sf);
                }
                private static bool _Value_ComputeIsReadOnly(global::LightSwitchApplication.HitSetItem e)
                {
                    bool result = false;
                    e.Value_IsReadOnly(ref result);
                    return result;
                }
                private static void _Value_Validate(global::LightSwitchApplication.HitSetItem e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Value_Validate(r);
                }
                private static int _Value_GetImplementationValue(global::LightSwitchApplication.HitSetItem.DetailsClass d)
                {
                    return d.ImplementationEntity.Value;
                }
                private static void _Value_SetImplementationValue(global::LightSwitchApplication.HitSetItem.DetailsClass d, int v)
                {
                    d.ImplementationEntity.Value = v;
                }
                private static void _Value_OnValueChanged(global::LightSwitchApplication.HitSetItem e)
                {
                    e.Value_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.HitSetItem, global::LightSwitchApplication.HitSetItem.DetailsClass, int>.Entry
                    Multiplicity = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.HitSetItem, global::LightSwitchApplication.HitSetItem.DetailsClass, int>.Entry(
                        "Multiplicity",
                        global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties._Multiplicity_Stub,
                        global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties._Multiplicity_ComputeIsReadOnly,
                        global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties._Multiplicity_Validate,
                        global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties._Multiplicity_GetImplementationValue,
                        global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties._Multiplicity_SetImplementationValue,
                        global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties._Multiplicity_OnValueChanged);
                private static void _Multiplicity_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.HitSetItem.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.HitSetItem, global::LightSwitchApplication.HitSetItem.DetailsClass, int>.Data> c, global::LightSwitchApplication.HitSetItem.DetailsClass d, object sf)
                {
                    c(d, ref d._Multiplicity, sf);
                }
                private static bool _Multiplicity_ComputeIsReadOnly(global::LightSwitchApplication.HitSetItem e)
                {
                    bool result = false;
                    e.Multiplicity_IsReadOnly(ref result);
                    return result;
                }
                private static void _Multiplicity_Validate(global::LightSwitchApplication.HitSetItem e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Multiplicity_Validate(r);
                }
                private static int _Multiplicity_GetImplementationValue(global::LightSwitchApplication.HitSetItem.DetailsClass d)
                {
                    return d.ImplementationEntity.Multiplicity;
                }
                private static void _Multiplicity_SetImplementationValue(global::LightSwitchApplication.HitSetItem.DetailsClass d, int v)
                {
                    d.ImplementationEntity.Multiplicity = v;
                }
                private static void _Multiplicity_OnValueChanged(global::LightSwitchApplication.HitSetItem e)
                {
                    e.Multiplicity_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.HitSetItem, global::LightSwitchApplication.HitSetItem.DetailsClass, int>.Entry
                    Turn = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.HitSetItem, global::LightSwitchApplication.HitSetItem.DetailsClass, int>.Entry(
                        "Turn",
                        global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties._Turn_Stub,
                        global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties._Turn_ComputeIsReadOnly,
                        global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties._Turn_Validate,
                        global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties._Turn_GetImplementationValue,
                        global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties._Turn_SetImplementationValue,
                        global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties._Turn_OnValueChanged);
                private static void _Turn_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.HitSetItem.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.HitSetItem, global::LightSwitchApplication.HitSetItem.DetailsClass, int>.Data> c, global::LightSwitchApplication.HitSetItem.DetailsClass d, object sf)
                {
                    c(d, ref d._Turn, sf);
                }
                private static bool _Turn_ComputeIsReadOnly(global::LightSwitchApplication.HitSetItem e)
                {
                    bool result = false;
                    e.Turn_IsReadOnly(ref result);
                    return result;
                }
                private static void _Turn_Validate(global::LightSwitchApplication.HitSetItem e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Turn_Validate(r);
                }
                private static int _Turn_GetImplementationValue(global::LightSwitchApplication.HitSetItem.DetailsClass d)
                {
                    return d.ImplementationEntity.Turn;
                }
                private static void _Turn_SetImplementationValue(global::LightSwitchApplication.HitSetItem.DetailsClass d, int v)
                {
                    d.ImplementationEntity.Turn = v;
                }
                private static void _Turn_OnValueChanged(global::LightSwitchApplication.HitSetItem e)
                {
                    e.Turn_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.HitSetItem, global::LightSwitchApplication.HitSetItem.DetailsClass, int>.Entry
                    DartNumber = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.HitSetItem, global::LightSwitchApplication.HitSetItem.DetailsClass, int>.Entry(
                        "DartNumber",
                        global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties._DartNumber_Stub,
                        global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties._DartNumber_ComputeIsReadOnly,
                        global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties._DartNumber_Validate,
                        global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties._DartNumber_GetImplementationValue,
                        global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties._DartNumber_SetImplementationValue,
                        global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties._DartNumber_OnValueChanged);
                private static void _DartNumber_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.HitSetItem.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.HitSetItem, global::LightSwitchApplication.HitSetItem.DetailsClass, int>.Data> c, global::LightSwitchApplication.HitSetItem.DetailsClass d, object sf)
                {
                    c(d, ref d._DartNumber, sf);
                }
                private static bool _DartNumber_ComputeIsReadOnly(global::LightSwitchApplication.HitSetItem e)
                {
                    bool result = false;
                    e.DartNumber_IsReadOnly(ref result);
                    return result;
                }
                private static void _DartNumber_Validate(global::LightSwitchApplication.HitSetItem e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.DartNumber_Validate(r);
                }
                private static int _DartNumber_GetImplementationValue(global::LightSwitchApplication.HitSetItem.DetailsClass d)
                {
                    return d.ImplementationEntity.DartNumber;
                }
                private static void _DartNumber_SetImplementationValue(global::LightSwitchApplication.HitSetItem.DetailsClass d, int v)
                {
                    d.ImplementationEntity.DartNumber = v;
                }
                private static void _DartNumber_OnValueChanged(global::LightSwitchApplication.HitSetItem e)
                {
                    e.DartNumber_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.HitSetItem, global::LightSwitchApplication.HitSetItem.DetailsClass, bool>.Entry
                    Succesful = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.HitSetItem, global::LightSwitchApplication.HitSetItem.DetailsClass, bool>.Entry(
                        "Succesful",
                        global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties._Succesful_Stub,
                        global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties._Succesful_ComputeIsReadOnly,
                        global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties._Succesful_Validate,
                        global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties._Succesful_GetImplementationValue,
                        global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties._Succesful_SetImplementationValue,
                        global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties._Succesful_OnValueChanged);
                private static void _Succesful_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.HitSetItem.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.HitSetItem, global::LightSwitchApplication.HitSetItem.DetailsClass, bool>.Data> c, global::LightSwitchApplication.HitSetItem.DetailsClass d, object sf)
                {
                    c(d, ref d._Succesful, sf);
                }
                private static bool _Succesful_ComputeIsReadOnly(global::LightSwitchApplication.HitSetItem e)
                {
                    bool result = false;
                    e.Succesful_IsReadOnly(ref result);
                    return result;
                }
                private static void _Succesful_Validate(global::LightSwitchApplication.HitSetItem e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Succesful_Validate(r);
                }
                private static bool _Succesful_GetImplementationValue(global::LightSwitchApplication.HitSetItem.DetailsClass d)
                {
                    return d.ImplementationEntity.Succesful;
                }
                private static void _Succesful_SetImplementationValue(global::LightSwitchApplication.HitSetItem.DetailsClass d, bool v)
                {
                    d.ImplementationEntity.Succesful = v;
                }
                private static void _Succesful_OnValueChanged(global::LightSwitchApplication.HitSetItem e)
                {
                    e.Succesful_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.HitSetItem, global::LightSwitchApplication.HitSetItem.DetailsClass, global::System.DateTime>.Entry
                    ThrowDate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.HitSetItem, global::LightSwitchApplication.HitSetItem.DetailsClass, global::System.DateTime>.Entry(
                        "ThrowDate",
                        global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties._ThrowDate_Stub,
                        global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties._ThrowDate_ComputeIsReadOnly,
                        global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties._ThrowDate_Validate,
                        global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties._ThrowDate_GetImplementationValue,
                        global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties._ThrowDate_SetImplementationValue,
                        global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties._ThrowDate_OnValueChanged);
                private static void _ThrowDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.HitSetItem.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.HitSetItem, global::LightSwitchApplication.HitSetItem.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.HitSetItem.DetailsClass d, object sf)
                {
                    c(d, ref d._ThrowDate, sf);
                }
                private static bool _ThrowDate_ComputeIsReadOnly(global::LightSwitchApplication.HitSetItem e)
                {
                    bool result = false;
                    e.ThrowDate_IsReadOnly(ref result);
                    return result;
                }
                private static void _ThrowDate_Validate(global::LightSwitchApplication.HitSetItem e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ThrowDate_Validate(r);
                }
                private static global::System.DateTime _ThrowDate_GetImplementationValue(global::LightSwitchApplication.HitSetItem.DetailsClass d)
                {
                    return d.ImplementationEntity.ThrowDate;
                }
                private static void _ThrowDate_SetImplementationValue(global::LightSwitchApplication.HitSetItem.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.ThrowDate = global::LightSwitchApplication.HitSetItem.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _ThrowDate_OnValueChanged(global::LightSwitchApplication.HitSetItem e)
                {
                    e.ThrowDate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.HitSetItem, global::LightSwitchApplication.HitSetItem.DetailsClass, string>.Entry
                    CreatedBy = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.HitSetItem, global::LightSwitchApplication.HitSetItem.DetailsClass, string>.Entry(
                        "CreatedBy",
                        global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties._CreatedBy_Stub,
                        global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties._CreatedBy_ComputeIsReadOnly,
                        global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties._CreatedBy_Validate,
                        global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties._CreatedBy_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties._CreatedBy_OnValueChanged);
                private static void _CreatedBy_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.HitSetItem.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.HitSetItem, global::LightSwitchApplication.HitSetItem.DetailsClass, string>.Data> c, global::LightSwitchApplication.HitSetItem.DetailsClass d, object sf)
                {
                    c(d, ref d._CreatedBy, sf);
                }
                private static bool _CreatedBy_ComputeIsReadOnly(global::LightSwitchApplication.HitSetItem e)
                {
                    bool result = false;
                    e.CreatedBy_IsReadOnly(ref result);
                    return result;
                }
                private static void _CreatedBy_Validate(global::LightSwitchApplication.HitSetItem e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CreatedBy_Validate(r);
                }
                private static string _CreatedBy_GetImplementationValue(global::LightSwitchApplication.HitSetItem.DetailsClass d)
                {
                    return d.ImplementationEntity.CreatedBy;
                }
                private static void _CreatedBy_OnValueChanged(global::LightSwitchApplication.HitSetItem e)
                {
                    e.CreatedBy_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.HitSetItem, global::LightSwitchApplication.HitSetItem.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Entry
                    Created = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.HitSetItem, global::LightSwitchApplication.HitSetItem.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Entry(
                        "Created",
                        global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties._Created_Stub,
                        global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties._Created_ComputeIsReadOnly,
                        global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties._Created_Validate,
                        global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties._Created_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties._Created_OnValueChanged);
                private static void _Created_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.HitSetItem.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.HitSetItem, global::LightSwitchApplication.HitSetItem.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Data> c, global::LightSwitchApplication.HitSetItem.DetailsClass d, object sf)
                {
                    c(d, ref d._Created, sf);
                }
                private static bool _Created_ComputeIsReadOnly(global::LightSwitchApplication.HitSetItem e)
                {
                    bool result = false;
                    e.Created_IsReadOnly(ref result);
                    return result;
                }
                private static void _Created_Validate(global::LightSwitchApplication.HitSetItem e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Created_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTimeOffset> _Created_GetImplementationValue(global::LightSwitchApplication.HitSetItem.DetailsClass d)
                {
                    return d.ImplementationEntity.Created;
                }
                private static void _Created_OnValueChanged(global::LightSwitchApplication.HitSetItem e)
                {
                    e.Created_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.HitSetItem, global::LightSwitchApplication.HitSetItem.DetailsClass, string>.Entry
                    ModifiedBy = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.HitSetItem, global::LightSwitchApplication.HitSetItem.DetailsClass, string>.Entry(
                        "ModifiedBy",
                        global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties._ModifiedBy_Stub,
                        global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties._ModifiedBy_ComputeIsReadOnly,
                        global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties._ModifiedBy_Validate,
                        global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties._ModifiedBy_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties._ModifiedBy_OnValueChanged);
                private static void _ModifiedBy_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.HitSetItem.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.HitSetItem, global::LightSwitchApplication.HitSetItem.DetailsClass, string>.Data> c, global::LightSwitchApplication.HitSetItem.DetailsClass d, object sf)
                {
                    c(d, ref d._ModifiedBy, sf);
                }
                private static bool _ModifiedBy_ComputeIsReadOnly(global::LightSwitchApplication.HitSetItem e)
                {
                    bool result = false;
                    e.ModifiedBy_IsReadOnly(ref result);
                    return result;
                }
                private static void _ModifiedBy_Validate(global::LightSwitchApplication.HitSetItem e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ModifiedBy_Validate(r);
                }
                private static string _ModifiedBy_GetImplementationValue(global::LightSwitchApplication.HitSetItem.DetailsClass d)
                {
                    return d.ImplementationEntity.ModifiedBy;
                }
                private static void _ModifiedBy_OnValueChanged(global::LightSwitchApplication.HitSetItem e)
                {
                    e.ModifiedBy_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.HitSetItem, global::LightSwitchApplication.HitSetItem.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Entry
                    Modified = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.HitSetItem, global::LightSwitchApplication.HitSetItem.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Entry(
                        "Modified",
                        global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties._Modified_Stub,
                        global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties._Modified_ComputeIsReadOnly,
                        global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties._Modified_Validate,
                        global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties._Modified_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties._Modified_OnValueChanged);
                private static void _Modified_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.HitSetItem.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.HitSetItem, global::LightSwitchApplication.HitSetItem.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Data> c, global::LightSwitchApplication.HitSetItem.DetailsClass d, object sf)
                {
                    c(d, ref d._Modified, sf);
                }
                private static bool _Modified_ComputeIsReadOnly(global::LightSwitchApplication.HitSetItem e)
                {
                    bool result = false;
                    e.Modified_IsReadOnly(ref result);
                    return result;
                }
                private static void _Modified_Validate(global::LightSwitchApplication.HitSetItem e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Modified_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTimeOffset> _Modified_GetImplementationValue(global::LightSwitchApplication.HitSetItem.DetailsClass d)
                {
                    return d.ImplementationEntity.Modified;
                }
                private static void _Modified_OnValueChanged(global::LightSwitchApplication.HitSetItem e)
                {
                    e.Modified_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.HitSetItem, global::LightSwitchApplication.HitSetItem.DetailsClass, byte[]>.Entry
                    RowVersion = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.HitSetItem, global::LightSwitchApplication.HitSetItem.DetailsClass, byte[]>.Entry(
                        "RowVersion",
                        global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties._RowVersion_Stub,
                        global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties._RowVersion_ComputeIsReadOnly,
                        global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties._RowVersion_Validate,
                        global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties._RowVersion_GetImplementationValue,
                        global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties._RowVersion_SetImplementationValue,
                        global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties._RowVersion_OnValueChanged);
                private static void _RowVersion_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.HitSetItem.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.HitSetItem, global::LightSwitchApplication.HitSetItem.DetailsClass, byte[]>.Data> c, global::LightSwitchApplication.HitSetItem.DetailsClass d, object sf)
                {
                    c(d, ref d._RowVersion, sf);
                }
                private static bool _RowVersion_ComputeIsReadOnly(global::LightSwitchApplication.HitSetItem e)
                {
                    bool result = false;
                    e.RowVersion_IsReadOnly(ref result);
                    return result;
                }
                private static void _RowVersion_Validate(global::LightSwitchApplication.HitSetItem e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.RowVersion_Validate(r);
                }
                private static byte[] _RowVersion_GetImplementationValue(global::LightSwitchApplication.HitSetItem.DetailsClass d)
                {
                    return d.ImplementationEntity.RowVersion;
                }
                private static void _RowVersion_SetImplementationValue(global::LightSwitchApplication.HitSetItem.DetailsClass d, byte[] v)
                {
                    d.ImplementationEntity.RowVersion = v;
                }
                private static void _RowVersion_OnValueChanged(global::LightSwitchApplication.HitSetItem e)
                {
                    e.RowVersion_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.HitSetItem, global::LightSwitchApplication.HitSetItem.DetailsClass, global::LightSwitchApplication.GameSetItem>.Entry
                    Game = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.HitSetItem, global::LightSwitchApplication.HitSetItem.DetailsClass, global::LightSwitchApplication.GameSetItem>.Entry(
                        "Game",
                        global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties._Game_Stub,
                        global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties._Game_ComputeIsReadOnly,
                        global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties._Game_Validate,
                        global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties._Game_GetCoreImplementationValue,
                        global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties._Game_GetImplementationValue,
                        global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties._Game_SetImplementationValue,
                        global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties._Game_Refresh,
                        global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties._Game_OnValueChanged);
                private static void _Game_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.HitSetItem.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.HitSetItem, global::LightSwitchApplication.HitSetItem.DetailsClass, global::LightSwitchApplication.GameSetItem>.Data> c, global::LightSwitchApplication.HitSetItem.DetailsClass d, object sf)
                {
                    c(d, ref d._Game, sf);
                }
                private static bool _Game_ComputeIsReadOnly(global::LightSwitchApplication.HitSetItem e)
                {
                    bool result = false;
                    e.Game_IsReadOnly(ref result);
                    return result;
                }
                private static void _Game_Validate(global::LightSwitchApplication.HitSetItem e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Game_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Game_GetCoreImplementationValue(global::LightSwitchApplication.HitSetItem.DetailsClass d)
                {
                    return d.ImplementationEntity.Game;
                }
                private static global::LightSwitchApplication.GameSetItem _Game_GetImplementationValue(global::LightSwitchApplication.HitSetItem.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.GameSetItem, global::LightSwitchApplication.GameSetItem.DetailsClass>(global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties.Game, ref d._Game);
                }
                private static void _Game_SetImplementationValue(global::LightSwitchApplication.HitSetItem.DetailsClass d, global::LightSwitchApplication.GameSetItem v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties.Game, ref d._Game, (i, ev) => i.Game = ev, v);
                }
                private static void _Game_Refresh(global::LightSwitchApplication.HitSetItem.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties.Game, ref d._Game);
                }
                private static void _Game_OnValueChanged(global::LightSwitchApplication.HitSetItem e)
                {
                    e.Game_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.HitSetItem, global::LightSwitchApplication.HitSetItem.DetailsClass, global::LightSwitchApplication.UserSetItem>.Entry
                    Player = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.HitSetItem, global::LightSwitchApplication.HitSetItem.DetailsClass, global::LightSwitchApplication.UserSetItem>.Entry(
                        "Player",
                        global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties._Player_Stub,
                        global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties._Player_ComputeIsReadOnly,
                        global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties._Player_Validate,
                        global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties._Player_GetCoreImplementationValue,
                        global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties._Player_GetImplementationValue,
                        global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties._Player_SetImplementationValue,
                        global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties._Player_Refresh,
                        global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties._Player_OnValueChanged);
                private static void _Player_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.HitSetItem.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.HitSetItem, global::LightSwitchApplication.HitSetItem.DetailsClass, global::LightSwitchApplication.UserSetItem>.Data> c, global::LightSwitchApplication.HitSetItem.DetailsClass d, object sf)
                {
                    c(d, ref d._Player, sf);
                }
                private static bool _Player_ComputeIsReadOnly(global::LightSwitchApplication.HitSetItem e)
                {
                    bool result = false;
                    e.Player_IsReadOnly(ref result);
                    return result;
                }
                private static void _Player_Validate(global::LightSwitchApplication.HitSetItem e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Player_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Player_GetCoreImplementationValue(global::LightSwitchApplication.HitSetItem.DetailsClass d)
                {
                    return d.ImplementationEntity.Player;
                }
                private static global::LightSwitchApplication.UserSetItem _Player_GetImplementationValue(global::LightSwitchApplication.HitSetItem.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.UserSetItem, global::LightSwitchApplication.UserSetItem.DetailsClass>(global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties.Player, ref d._Player);
                }
                private static void _Player_SetImplementationValue(global::LightSwitchApplication.HitSetItem.DetailsClass d, global::LightSwitchApplication.UserSetItem v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties.Player, ref d._Player, (i, ev) => i.Player = ev, v);
                }
                private static void _Player_Refresh(global::LightSwitchApplication.HitSetItem.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.HitSetItem.DetailsClass.PropertySetProperties.Player, ref d._Player);
                }
                private static void _Player_OnValueChanged(global::LightSwitchApplication.HitSetItem e)
                {
                    e.Player_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.HitSetItem, global::LightSwitchApplication.HitSetItem.DetailsClass, int>.Data _Id;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.HitSetItem, global::LightSwitchApplication.HitSetItem.DetailsClass, int>.Data _Value;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.HitSetItem, global::LightSwitchApplication.HitSetItem.DetailsClass, int>.Data _Multiplicity;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.HitSetItem, global::LightSwitchApplication.HitSetItem.DetailsClass, int>.Data _Turn;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.HitSetItem, global::LightSwitchApplication.HitSetItem.DetailsClass, int>.Data _DartNumber;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.HitSetItem, global::LightSwitchApplication.HitSetItem.DetailsClass, bool>.Data _Succesful;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.HitSetItem, global::LightSwitchApplication.HitSetItem.DetailsClass, global::System.DateTime>.Data _ThrowDate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.HitSetItem, global::LightSwitchApplication.HitSetItem.DetailsClass, string>.Data _CreatedBy;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.HitSetItem, global::LightSwitchApplication.HitSetItem.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Data _Created;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.HitSetItem, global::LightSwitchApplication.HitSetItem.DetailsClass, string>.Data _ModifiedBy;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.HitSetItem, global::LightSwitchApplication.HitSetItem.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Data _Modified;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.HitSetItem, global::LightSwitchApplication.HitSetItem.DetailsClass, byte[]>.Data _RowVersion;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.HitSetItem, global::LightSwitchApplication.HitSetItem.DetailsClass, global::LightSwitchApplication.GameSetItem>.Data _Game;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.HitSetItem, global::LightSwitchApplication.HitSetItem.DetailsClass, global::LightSwitchApplication.UserSetItem>.Data _Player;
            
        }
    
        #endregion
    }
    
    #endregion
}
